apiVersion: v1
kind: PersistentVolume
metadata:
  name: scanfile-data-daniele-pv
  namespace: daniele
  labels:
    my-label: pv-data-label
spec:
  capacity:
    storage: 100Gi
  volumeMode: Filesystem
  accessModes:
  - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  # storageClassName: "my-daniele-data-storageclass-name"
  hostPath:
    path: "/home/daniele/Daniele/myData/scanfile"
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - k8s-worker1.local
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: scanfile-env-daniele-pv
  namespace: daniele
  labels:
    my-label: pv-env-label
spec:
  capacity:
    storage: 25Gi
  volumeMode: Filesystem
  accessModes:
  - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  # storageClassName: "my-daniele-env-storageclass-name"
  hostPath:
    path: /home/daniele/Daniele/scanfile/data
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - k8s-worker1.local
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: scanfile-data-daniele-pvclaim
  namespace: daniele
spec:
  # storageClassName: "my-daniele-data-storageclass-name"
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
  selector:
    matchLabels:
      my-label: pv-data-label
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: scanfile-env-daniele-pvclaim
  namespace: daniele
spec:
  # storageClassName: "my-daniele-env-storageclass-name"
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
  selector:
    matchLabels:
      my-label: pv-env-label